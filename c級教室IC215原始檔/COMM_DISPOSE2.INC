;;;;;;;;;;;;;;;;;;;;;;;;;;;
ID_DATA:
    JNB   B_COMM1,ID_DATA1
    MOV   COMMLOAD2,51H
    MOV   COMMLOAD3,52H
    MOV   COMMLOAD4,53H
    CLR   B_COMM1
    LJMP  DISPOSE
ID_DATA1:
    JNB   B_COMM2,ID_DATA2
    MOV   COMMLOAD2,55H
    MOV   COMMLOAD3,56H
    MOV   COMMLOAD4,57H
    CLR   B_COMM2
    LJMP  DISPOSE
ID_DATA2:
    JNB   B_COMM3,ID_DATA3
    MOV   COMMLOAD2,59H
    MOV   COMMLOAD3,5AH
    MOV   COMMLOAD4,5BH
    CLR   B_COMM3
    LJMP  DISPOSE
ID_DATA3:
    JNB   B_COMM4,ID_DATA4
    MOV   COMMLOAD2,5DH
    MOV   COMMLOAD3,5EH
    MOV   COMMLOAD4,5FH
    CLR   B_COMM4
    LJMP  DISPOSE
ID_DATA4:
    JNB   B_COMM5,ID_DATA5
    MOV   COMMLOAD2,61H
    MOV   COMMLOAD3,62H
    MOV   COMMLOAD4,63H
    CLR   B_COMM5
    LJMP  DISPOSE
ID_DATA5:
    JNB   B_COMM6,ID_DATA6
    MOV   COMMLOAD2,65H
    MOV   COMMLOAD3,66H
    MOV   COMMLOAD4,67H
    CLR   B_COMM6
    LJMP  DISPOSE
ID_DATA6:
    JNB   B_COMM7,ID_DATA7
    MOV   COMMLOAD2,69H
    MOV   COMMLOAD3,6AH
    MOV   COMMLOAD4,6BH
    CLR   B_COMM7
    LJMP  DISPOSE
ID_DATA7:
    JNB   B_COMM8,ID_DATA8
    MOV   COMMLOAD2,6DH
    MOV   COMMLOAD3,6EH
    MOV   COMMLOAD4,6FH
    CLR   B_COMM8
    LJMP  DISPOSE
ID_DATA8:
    RET
;;;;;;;;
DISPOSE:
    MOV   a,COMMLOAD2
    CJNE  A,#57H,COMM_R    ;OK
    LJMP  COMM_W1
COMM_R:
    CJNE  A,#52H,COMM_K    ;
    LJMP  COMM_R1
COMM_K:
    CJNE  A,#4BH,COMM_V    ;
    LJMP  COMM_K1          ;OK
COMM_V:
    CJNE  A,#56H,COMM_S    ;
    LJMP  COMM_V1          ;OK
COMM_S:
    CJNE  A,#53H,COMM_SN1  ;
    LJMP  COMM_S1          ;OK
COMM_SN1:
    CJNE  A,#31H,COMM_SN2  ;
    LJMP  COMM_SN1_1       ;OK
COMM_SN2:
    CJNE  A,#32H,COMM_SN3  ;
    LJMP  COMM_SN2_1       ;OK
COMM_SN3:
    CJNE  A,#33H,COMM_SN4  ;
    LJMP  COMM_SN3_1       ;OK
COMM_SN4:
    CJNE  A,#34H,COMM_SN5  ;
    LJMP  COMM_SN4_1       ;OK
COMM_SN5:
    CJNE  A,#35H,COMM_SN6  ;
    LJMP  COMM_SN5_1       ;OK
COMM_SN6:
    CJNE  A,#36H,COMM_SN7  ;
    LJMP  COMM_SN6_1       ;OK
COMM_SN7:
    CJNE  A,#37H,COMM_SN8  ;
    LJMP  COMM_SN7_1       ;OK
COMM_SN8:
    CJNE  A,#38H,commout8  ;
    LJMP  COMM_SN8_1       ;OK
;==========================
commout8:
    LJMP  commout
;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMM_W1_OUT:
    RET
COMM_W1:
    LCALL ASCII_TO_HEX
    JZ    COMM_W1_OUT
    DEC   A
    MOV   DPTR,#COMMW_FUN
    MOV   B, #03H
    MUL   AB
    nop
    JMP   @A+DPTR
COMMW_FUN:
    JMP  COMMW_FUN_01H       ;POWER  ON
    JMP  COMMW_FUN_02H       ;POWER  OFF
    JMP  COMMW_FUN_03H       ;MUTE   ON
    JMP  COMMW_FUN_04H       ;MUTE   OFF
    JMP  COMMW_FUN_05H       ;SW1    ON
    JMP  COMMW_FUN_06H       ;SW1    OFF
    JMP  COMMW_FUN_07H       ;SW2    ON
    JMP  COMMW_FUN_08H       ;SW2    OFF
    JMP  COMMW_FUN_09H       ;SW3    ON
    JMP  COMMW_FUN_0AH       ;SW3    OFF
    JMP  COMMW_FUN_0BH       ;
    JMP  COMMW_FUN_0CH       ;
    JMP  COMMW_FUN_0DH       ;PRI    ON
    JMP  COMMW_FUN_0EH       ;PRI    OFF
    JMP  COMMW_FUN_0FH       ;PAGE   ON
    JMP  COMMW_FUN_10H       ;PAGE   OFF
    JMP  COMMW_FUN_11H       ;VOL    UP
    JMP  COMMW_FUN_12H       ;VOL    DOWN
    JMP  COMMW_FUN_13H       ;SOURCE UP
    JMP  COMMW_FUN_14H       ;SOURCE DOWN
    JMP  COMMW_FUN_15H  ;SOURCE NAME UP
    JMP  COMMW_FUN_16H  ;SOURCE NAME DOWN
    JMP  COMMW_FUN_17H       ;SET    UP
    JMP  COMMW_FUN_18H       ;SET    DOWN
    NOP
    NOP
    LJMP SETCPU
COMMW_FUN_01H:
    JB    B_POWER,COMMW_FUN_01HOUT
    LCALL SET_POWERON
COMMW_FUN_01HOUT:
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_02H:
    JNB   B_POWER,COMMW_FUN_02HOUT
    LCALL power_off
COMMW_FUN_02HOUT:
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_03H:
    JB    MUTE_B,COMMW_FUN_03HOUT
    LCALL SET_MUTEON
    LCALL KEY_DDAATTAA
COMMW_FUN_03HOUT:
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_04H:
    JNB   MUTE_B,COMMW_FUN_04HOUT
    LCALL SET_MUTEOFF
    LCALL KEY_DDAATTAA
COMMW_FUN_04HOUT:
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_05H:
    JB    SW1,COMMW_FUN_05HOUT
    SETB  SW1
    lcall CHECK_MUTE
    LCALL LCD_GO_SET
    LCALL SET_LINE
COMMW_FUN_05HOUT:
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_06H:
    JNB   SW1,COMMW_FUN_06HOUT
    CLR   SW1
    lcall CHECK_MUTE
    LCALL LCD_GO_SET
    LCALL SET_LINE
COMMW_FUN_06HOUT:
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_07H:
    JB    SW2,COMMW_FUN_07HOUT
    SETB  SW2
    lcall CHECK_MUTE
    LCALL LCD_GO_SET
    LCALL SET_LINE
COMMW_FUN_07HOUT:
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_08H:
    JNB   SW2,COMMW_FUN_08HOUT
    CLR   SW2
    lcall CHECK_MUTE
    LCALL LCD_GO_SET
    LCALL SET_LINE
COMMW_FUN_08HOUT:
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_09H:
    JB    SW3,COMMW_FUN_09HOUT
    SETB  SW3
    lcall CHECK_MUTE
    LCALL LCD_GO_SET
    LCALL SET_LINE
COMMW_FUN_09HOUT:
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_0AH:
    JNB   SW3,COMMW_FUN_0AHOUT
    CLR   SW3
    lcall CHECK_MUTE
    LCALL LCD_GO_SET
    LCALL SET_LINE
COMMW_FUN_0AHOUT:
    LJMP  DISPOSE_OUT
;;;;;;;
;;;;;;;
COMMW_FUN_0BH:
    ;JB    SW3,COMMW_FUN_0BHOUT
    ;SETB  SW3
;COMMW_FUN_0BHOUT:
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_0CH:
;    JNB   SW3,COMMW_FUN_0CHOUT
;    CLR   SW3
;COMMW_FUN_0CHOUT:
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_0DH:         ;PRI    ON
    JB    B_PRI,COMMW_FUN_0BHOUT
    LCALL ON_PRI_FUN
    LCALL KEY_DDAATTAA
COMMW_FUN_0BHOUT:
    SETB  69H
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_0EH:         ;PRI    OFF
    JNB   B_PRI,COMMW_FUN_0CHOUT
    LCALL OFF_PRI_FUN
    LCALL KEY_DDAATTAA
COMMW_FUN_0CHOUT:
    CLR   69H
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_0FH:         ;PAGE    ON
    JB    PAGE_B,COMMW_FUN_0FHOUT
    LCALL ON_PAGE_FUN
    LCALL KEY_DDAATTAA
COMMW_FUN_0FHOUT:
    SETB  68H
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_10H:         ;PAGE    OFF
    JNB   PAGE_B,COMMW_FUN_10HOUT
    LCALL OFF_PAGE_FUN
    LCALL KEY_DDAATTAA
    CLR   68H
COMMW_FUN_10HOUT:
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_11H:         ;VOL     UP
    LCALL COM_NOK13
    SETB  B_COMM_RDVOL
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_12H:         ;VOL     DOWN
    LCALL COM_NOK14
    SETB  B_COMM_RDVOL
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_13H:         ;SOURCE   UP
    LCALL COM_NOK15
    SETB  B_COMM_RDSOU
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_14H:         ;SOURCE   DOWN
    LCALL COM_NOK16
    SETB  B_COMM_RDSOU
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_15H:         ;SOURCE NAME  UP
    LCALL NOK15_1
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_16H:         ;SOURCE NAME  DOWN
    LCALL NOK16_1
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_17H:         ;SET   UP
;    LCALL COM_NOK27_1
    LJMP  DISPOSE_OUT
;;;;;;;
COMMW_FUN_18H:         ;SET   DOWN
;    LCALL NOK27_1
    LJMP  DISPOSE_OUT
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMM_R1_OUT:
    RET
COMM_R1:
    LCALL ASCII_TO_HEX
    JZ    COMM_R1_OUT
    DEC   A
    MOV   DPTR,#COMMR_FUN
    MOV   B, #03H
    MUL   AB
    nop
    JMP   @A+DPTR
COMMR_FUN:
    JMP   COMMR_FUN_01H       ;READ
    JMP   COMMR_FUN_02H       ;READ
    JMP   COMMR_FUN_03H       ;READ PAGE
    JMP   COMMR_FUN_04H       ;READ PRI
    JMP   COMMR_FUN_05H       ;READ
    JMP   COMMR_FUN_06H       ;READ
    RET
COMMR_FUN_01H:
    RET
COMMR_FUN_02H:
    RET
COMMR_FUN_03H:
    ;LCALL COMM_SENDPAGE
    RET
COMMR_FUN_04H:
    ;LCALL COMM_SENDPRI
    RET
COMMR_FUN_05H:
    RET
COMMR_FUN_06H:
    RET
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
COMM_K1_OUT:
    RET
COMM_K1:
    LCALL ASCII_TO_HEX
    JZ    COMM_K1_OUT
    DEC   A
    MOV   DPTR,#COMMK_FUN
    MOV   B, #03H
    MUL   AB
    nop
    JMP   @A+DPTR
COMMK_FUN:
    JMP   COMMW_FUN_01H       ;POWER  ON
    JMP   COMMW_FUN_02H       ;POWER  OFF
    JMP   COMMW_FUN_03H       ;MUTE   ON
    JMP   COMMW_FUN_04H       ;MUTE   OFF
    JMP   COMMW_FUN_05H       ;SW1    ON
    JMP   COMMW_FUN_06H       ;SW1    OFF
    JMP   COMMW_FUN_07H       ;SW2    ON
    JMP   COMMW_FUN_08H       ;SW2    OFF
    JMP   COMMW_FUN_09H       ;SW3    ON
    JMP   COMMW_FUN_0AH       ;SW3    OFF
    JMP   COMMW_FUN_0BH       ;
    JMP   COMMW_FUN_0CH       ;
    JMP   COMMW_FUN_0DH       ;PRI    ON
    JMP   COMMW_FUN_0EH       ;PRI    OFF
    JMP   COMMW_FUN_0FH       ;PAGE   ON
    JMP   COMMW_FUN_10H       ;PAGE   OFF
    JMP   COMMW_FUN_11H       ;
    JMP   COMMW_FUN_12H       ;
    JMP   COMMW_FUN_13H       ;
    JMP   COMMW_FUN_14H       ;
    JMP   COMMW_FUN_15H       ;
    JMP   COMMW_FUN_16H       ;
    JMP   COMMW_FUN_17H       ;
    JMP   COMMW_FUN_18H       ;
    NOP
    NOP
    LJMP  SETCPU
;;;;
COMM_V1:
    LCALL ASCII_TO_HEX
    MOV   VOLUME,A
    LCALL pt2257_2ch_vl
    LCALL LCD_GO_SET
    LCALL SET_LINE
    LJMP  DISPOSE_OUT
;;;;
COMM_S1:
    LCALL ASCII_TO_HEX
    MOV   SOURCE_VAL,A
    lcall CHECK_MUTE
    LCALL LCD_GO_SET
    LCALL SET_LINE
    LJMP  DISPOSE_OUT
;;;;;;;;;;;;;
;;;;;;;;;;;;;
COMM_SN1_1:
    LCALL ASCII_TO_HEX
    CJNE  A,#14H,COMM_SN1_1X
COMM_SN1_1X:
    JNC   COMM_SN1_1Y
    MOV   SOURCENAME_1,A
COMM_SN1_1Y:
    RET

COMM_SN2_1:
    LCALL ASCII_TO_HEX
    CJNE  A,#14H,COMM_SN1_2X
COMM_SN1_2X:
    JNC   COMM_SN1_2Y
    MOV   SOURCENAME_2,A
COMM_SN1_2Y:
    RET

COMM_SN3_1:
    LCALL ASCII_TO_HEX
    CJNE  A,#14H,COMM_SN1_3X
COMM_SN1_3X:
    JNC   COMM_SN1_3Y
    MOV   SOURCENAME_3,A
COMM_SN1_3Y:
    RET

COMM_SN4_1:
    LCALL ASCII_TO_HEX
    CJNE  A,#14H,COMM_SN1_4X
COMM_SN1_4X:
    JNC   COMM_SN1_4Y
    MOV   SOURCENAME_4,A
COMM_SN1_4Y:
    RET

COMM_SN5_1:
    LCALL ASCII_TO_HEX
    CJNE  A,#14H,COMM_SN1_5X
COMM_SN1_5X:
    JNC   COMM_SN1_5Y
    MOV   SOURCENAME_5,A
COMM_SN1_5Y:
    RET

COMM_SN6_1:
    LCALL ASCII_TO_HEX
    CJNE  A,#14H,COMM_SN1_6X
COMM_SN1_6X:
    JNC   COMM_SN1_6Y
    MOV   SOURCENAME_6,A
COMM_SN1_6Y:
    RET

COMM_SN7_1:
    LCALL ASCII_TO_HEX
    CJNE  A,#14H,COMM_SN1_7X
COMM_SN1_7X:
    JNC   COMM_SN1_7Y
    MOV   SOURCENAME_7,A
COMM_SN1_7Y:
    RET

COMM_SN8_1:
    LCALL ASCII_TO_HEX
    CJNE  A,#14H,COMM_SN1_8X
COMM_SN1_8X:
    JNC   COMM_SN1_8Y
    MOV   SOURCENAME_8,A
COMM_SN1_8Y:
    RET
;;;;;;;;;;;;;ASCIIÂë×ª»»ÎªHEXÂë
ASCII_TO_HEX:
    MOV   A,COMMLOAD3
    ANL   A,#11110000B
    CJNE  A,#30H,ASCII_TO_HEX_OUT
    MOV   A,COMMLOAD4
    ANL   A,#11110000B
    CJNE  A,#30H,ASCII_TO_HEX_OUT1
    LJMP  ASCII_TO_HEX_ONE
ASCII_TO_HEX_OUT1:
    CJNE  A,#40H,ASCII_TO_HEX_OUT
    LJMP  ASCII_TO_HEX_TWO
ASCII_TO_HEX_ONE:
    MOV   A,COMMLOAD3
    ANL   A,#00001111B
    swap  a
    MOV   20H,A
    MOV   A,COMMLOAD4
    ANL   A,#00001111B
    ORL   A,20H
    RET
ASCII_TO_HEX_OUT:
    MOV   A,#00H
    RET
;;;;;;;
ASCII_TO_HEX_TWO:
    MOV   A,COMMLOAD3
    ANL   A,#00001111B
    swap  a
    MOV   20H,A
    CLR   C
    MOV   A,COMMLOAD4
    SUBB  A,#37H
    NOP
    ORL   A,20H
    RET
;;;;;;;;;;;;;;;;;;;;;;;;;
;;=====================;;
DISPOSE_OUT:
    mov   time1,#0ffh;#02Fh    ;#02h
    mov   time2,#0ffh;#27h
    setb  BACKLIGTE
    MOV   SAVE_TIME,#80H
    RET
;;;;;;;;;;;;;;;;;;;;;;;;;
;;=====================;;
